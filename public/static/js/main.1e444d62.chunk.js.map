{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepararNotas.js","actions/notasActions.js","actions/authAction.js","actions/uiAction.js","components/ui/BotonAgregar.js","hooks/useForm.js","components/ui/BotonBorrar.js","components/ui/Formulario.js","components/ui/Navbar.js","components/crm/TareaIndividual.js","components/crm/Tareas.js","components/crm/CRM.js","components/ui/Carga.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/RutaPrivada.js","routers/RutaPublica.js","routers/AppRouter.js","reducers/notasReducer.js","store/store.js","reducers/uiReducer.js","reducers/authReducer.js","App.js","index.js"],"names":["baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","body","JSON","stringify","headers","fetchConToken","token","localStorage","getItem","types","prepararNota","nota","fecha","moment","format","prepararNotas","notas","map","mostrarNotas","type","payload","agregarNota","eliminarNota","id","editarNota","notaEditada","limpiarNota","login","usuario","checking","logout","abrirModal","cerrarModal","BotonAgregar","dispatch","useDispatch","className","onClick","useForm","valoresIniciales","useState","valores","setvalores","cambioInput","e","target","name","value","reset","BotonBorrar","_id","useSelector","state","notaActiva","a","respuesta","json","ok","Swal","fire","title","icon","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","Formulario","isOpen","ui","closeModal","titulo","nivel","useEffect","validar","trim","length","onRequestClose","closeTimeoutMS","style","overlayClassName","onSubmit","preventDefault","getState","editarNotaBackend","auth","uid","nombre","notaNueva","agregarNotaBackend","placeholder","onChange","Navbar","clear","TareaIndividual","notaComp","activarNota","Tareas","CRM","Carga","LoginScreen","correo","password","validator","isEmail","console","log","setItem","to","RegisterScreen","password2","AuthRouter","exact","path","component","RutaPrivada","Component","resto","variables","RutaPublica","AppRouter","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e444d62.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL;\r\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseURL}/${endpoint}`;\r\n    if(method === 'GET'){\r\n        return fetch(url)\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchConToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseURL}/${endpoint}`;\r\n    const token = localStorage.getItem('x-token')\r\n    if(method === 'GET'){\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        })\r\n    }else{\r\n        return fetch(url, {\r\n            method,\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n                \r\n            }\r\n        })\r\n    }\r\n}","export const types = {\r\n    // UI\r\n    uiAbrirModal: '[ui] Abrir Modal',\r\n    uiCerrarModal: '[ui] Cerrar Modal',\r\n\r\n    // Notas\r\n    notaAgregar: '[notas] Agregar',\r\n    notaEliminar: '[notas] Borrar',\r\n    notaEditar: '[notas] Editar',\r\n    notalimpiar: '[notas] Limpiar',\r\n    notaActiva: '[notas] Activar',\r\n    notaMostrar: '[notas] Mostrar',\r\n\r\n    // Auth\r\n    authLogin: '[auth] Login',\r\n    authChecking: '[auth] Checking',\r\n    authLogout: '[auth] Logout',\r\n}","import moment from 'moment';\r\nexport const prepararNota = (nota) => {\r\n    nota.fecha = moment(nota.fecha).format('YYYY-MM-DD')\r\n   return nota;\r\n}\r\n\r\n\r\nexport const prepararNotas = (notas) => {\r\n    return notas.map(nota => ({\r\n        ...nota,\r\n        fecha: moment(nota.fecha).format('YYYY-MM-DD')\r\n    }))\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepararNota, prepararNotas } from \"../helpers/prepararNotas\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const mostrarNotasBackend = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const respuesta = await fetchConToken('crud')\r\n            const body = await respuesta.json()\r\n            const notas = prepararNotas(body.notas)\r\n            if (body.ok) {\r\n                dispatch(mostrarNotas(notas))\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                title: error,\r\n                icon: 'error'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nconst mostrarNotas = (notas) => ({\r\n    type: types.notaMostrar,\r\n    payload: notas\r\n})\r\nexport const agregarNotaBackend = (nota) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const { uid, nombre } = getState().auth\r\n            const respuesta = await fetchConToken('crud', nota, 'POST');\r\n            const body = await respuesta.json()\r\n            if (body.ok) {\r\n                nota.id = body.notaNueva._id\r\n                nota.usuario = {\r\n                    uid,\r\n                    nombre\r\n                }\r\n                dispatch(agregarNota(nota))\r\n            }\r\n\r\n        } catch (error) {\r\n            Swal.fire({\r\n                title: error,\r\n                icon: 'error'\r\n            })\r\n        }\r\n    }\r\n}\r\nconst agregarNota = (nota) => ({\r\n    type: types.notaAgregar,\r\n    payload: nota\r\n});\r\nexport const borrarNotaBackend = (id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const respuesta = await fetchConToken(`crud/${id}`, {}, 'DELETE');\r\n            const body = await respuesta.json()\r\n            if (body.ok) {\r\n                dispatch(eliminarNota(id))\r\n            }\r\n        } catch (error) {\r\n            Swal.fire({\r\n                title: error,\r\n                icon: 'error'\r\n            })\r\n        }\r\n    }\r\n}\r\nconst eliminarNota = (id) => ({\r\n    type: types.notaEliminar,\r\n    payload: id\r\n})\r\n\r\nexport const activarNota = (nota) => ({\r\n    type: types.notaActiva,\r\n    payload: nota\r\n})\r\n\r\nexport const editarNotaBackend = (nota) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const id = getState().notas.notaActiva._id\r\n            const notaEditada = prepararNota(nota)\r\n            const respuesta = await fetchConToken(`crud/${id}`, notaEditada, 'PUT')\r\n            const body = await respuesta.json()\r\n            if (body.ok) {\r\n                dispatch(editarNota(notaEditada))\r\n            }\r\n\r\n        } catch (error) {\r\n            Swal.fire({\r\n                title: error,\r\n                icon: 'error'\r\n            })\r\n        }\r\n    }\r\n}\r\nconst editarNota = (notaEditada) => ({\r\n    type: types.notaEditar,\r\n    payload: notaEditada\r\n})\r\n\r\nexport const limpiarNota = () => ({\r\n    type: types.notalimpiar\r\n})","import Swal from \"sweetalert2\"\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\"\r\nimport { limpiarNota } from \"./notasActions\"\r\n\r\nexport const loginBackend = (usuario) => {\r\n    return async (dispatch) => {\r\n        const respuesta = await fetchSinToken('auth', usuario, 'POST')\r\n        const body = await respuesta.json()\r\n        console.log(body)\r\n        if (body.ok) {\r\n            localStorage.setItem('x-token', body.token);\r\n            dispatch(login({\r\n                uid: body.usuario.uid,\r\n                nombre: body.usuario.nombre\r\n            }))\r\n\r\n        }else{\r\n            Swal.fire({\r\n                title: 'Email y/o Contraseña incorrecto',\r\n                icon: 'error'\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const registerBackend = (usuario) => {\r\n    return async (dispatch) => {\r\n        const respuesta = await fetchSinToken('auth/nuevo', usuario, 'POST')\r\n        const body = await respuesta.json()\r\n        console.log(body)\r\n        if (body.ok) {\r\n            localStorage.setItem('x-token', body.token);\r\n            dispatch(login({\r\n                uid: body.usuario.uid,\r\n                nombre: body.usuario.nombre\r\n            }))\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport const Check = () => {\r\n    return async (dispatch) => {\r\n        const respuesta = await fetchConToken('auth/revalidar')\r\n        const body = await respuesta.json()\r\n        if (body.ok) {\r\n            localStorage.setItem('x-token', body.token)\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                nombre: body.nombre\r\n            }))\r\n        } else {\r\n            dispatch(checking())\r\n        }\r\n    }\r\n}\r\nconst login = (usuario) => ({\r\n    type: types.authLogin,\r\n    payload: usuario\r\n})\r\n\r\nconst checking = () => ({\r\n    type: types.authChecking\r\n})\r\n\r\nexport const LogoutBackend = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear()\r\n        dispatch(logout())\r\n        dispatch(limpiarNota())\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nexport const abrirModal = () => ({\r\n    type: types.uiAbrirModal\r\n})\r\n\r\nexport const cerrarModal = () => ({\r\n    type: types.uiCerrarModal\r\n})","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { abrirModal } from '../../actions/uiAction'\r\n\r\nexport const BotonAgregar = () => {\r\n    const dispatch = useDispatch()\r\n    const botonAgregar = () => {\r\n        dispatch(abrirModal())\r\n\r\n    }\r\n    return (\r\n        <button className=\"boton__agregar\" onClick={botonAgregar}>+ Agregar Tarea</button>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useForm = (valoresIniciales = {}) => {\r\n    const [valores, setvalores] = useState(valoresIniciales)\r\n\r\n    const cambioInput = (e) => {\r\n        setvalores({\r\n            ...valores,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const reset = () => {\r\n        setvalores(valoresIniciales)\r\n    }\r\n\r\n    return [valores, cambioInput, setvalores, reset];\r\n    \r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { borrarNotaBackend } from '../../actions/notasActions'\r\nimport { cerrarModal } from '../../actions/uiAction'\r\n\r\nexport const BotonBorrar = () => {\r\n    const dispatch = useDispatch()\r\n    const {_id} = useSelector(state => state.notas.notaActiva)\r\n    const eliminarNotaBTN = () => {\r\n        dispatch(borrarNotaBackend(_id))\r\n        dispatch(cerrarModal())\r\n    }\r\n    return (\r\n        <button className=\"boton__borrar\" onClick={eliminarNotaBTN}>Eliminar</button>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { agregarNotaBackend, editarNotaBackend, limpiarNota } from '../../actions/notasActions';\r\nimport { cerrarModal } from '../../actions/uiAction';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { BotonBorrar } from './BotonBorrar';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\nModal.setAppElement('#root');\r\n\r\nexport const Formulario = () => {\r\n    const { isOpen } = useSelector(state => state.ui)\r\n    const { notaActiva } = useSelector(state => state.notas)\r\n    const dispatch = useDispatch()\r\n\r\n    const closeModal = () => {\r\n        dispatch(cerrarModal())\r\n        dispatch(limpiarNota())\r\n    }\r\n\r\n    const [valores, cambioInput, setvalores, reset] = useForm({\r\n        titulo: '',\r\n        nota: '',\r\n        fecha: '',\r\n        nivel: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (notaActiva) {\r\n            setvalores(notaActiva)\r\n        } else {\r\n            setvalores({\r\n                titulo: '',\r\n                nota: '',\r\n                fecha: '',\r\n                nivel: ''\r\n            })\r\n        }\r\n    }, [setvalores, notaActiva])\r\n\r\n    const envioForm = (e) => {\r\n        e.preventDefault();\r\n        if (validar()) {\r\n            if (notaActiva) {\r\n                dispatch(editarNotaBackend(valores));\r\n            } else {\r\n                dispatch(agregarNotaBackend(valores))\r\n            }\r\n            reset()\r\n            dispatch(limpiarNota())\r\n            closeModal()\r\n        }\r\n    }\r\n    const validar = () => {\r\n        if (titulo.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Coloca el titulo de la nota',\r\n                icon: 'error'\r\n            })\r\n            return false;\r\n        }\r\n        if (nota.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Coloca la nota',\r\n                icon: 'error'\r\n            })\r\n            return false;\r\n        }\r\n        if (nivel === \"\") {\r\n            Swal.fire({\r\n                title: 'Coloca el nivel de la nota',\r\n                icon: 'error'\r\n            })\r\n            return false;\r\n        }\r\n        if (fecha === '') {\r\n            Swal.fire({\r\n                title: 'Coloca la fecha de la nota',\r\n                icon: 'error'\r\n            })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    const { titulo, nota, fecha, nivel } = valores;\r\n\r\n    return (\r\n\r\n        <Modal\r\n            isOpen={isOpen}\t\t\t\t\t//Define si esta abierto o no con(true/false)\r\n            onRequestClose={closeModal}\t\t\t//Se activa cuando damos click afuera del modal\r\n            closeTimeoutMS={200}\t\t\t\t//MS en que tarda en cerrar, especie de delay\r\n            style={customStyles}\t\t\t\t//Son los que copiamos arriba,viene con el modal\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1 className=\"form__titulo\">Agrega una Nota</h1>\r\n            <hr />\r\n            <form className=\"form\" onSubmit={envioForm}>\r\n                <div className=\"form__pregunta\">\r\n                    <label className=\"form__label\">Titulo</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Tirar la basura....\"\r\n                        className=\"form__input\"\r\n                        name=\"titulo\"\r\n                        value={titulo}\r\n                        onChange={cambioInput}\r\n                    />\r\n                </div>\r\n                <div className=\"form__pregunta\">\r\n                    <label className=\"form__label\">Descripción</label>\r\n                    <textarea\r\n                        className=\"form__input\"\r\n                        name=\"nota\"\r\n                        value={nota}\r\n                        onChange={cambioInput}\r\n                    ></textarea>\r\n                </div>\r\n                <div className=\"form__pregunta\">\r\n                    <label className=\"form__label\">Fecha</label>\r\n                    <input\r\n                        type=\"date\"\r\n                        className=\"form__input\"\r\n                        name=\"fecha\"\r\n                        value={fecha}\r\n                        onChange={cambioInput}\r\n\r\n                    />\r\n                </div>\r\n                <div className=\"form__pregunta\">\r\n                    <select\r\n                        className=\"form__input\"\r\n                        name=\"nivel\"\r\n                        value={nivel}\r\n                        onChange={cambioInput}>\r\n                        <option value=\"\">Importancia:</option>\r\n                        <option value=\"urgente\">Urgente</option>\r\n                        <option value=\"medio\">Medio</option>\r\n                        <option value=\"nourgente\">No Urgente</option>\r\n                    </select>\r\n                </div>\r\n                <button className=\"form__boton\" type=\"submit\">{notaActiva ? 'Guardar cambios' : 'Agregar'}</button>\r\n                {\r\n                    notaActiva && <BotonBorrar />\r\n                }\r\n            </form>\r\n        </Modal>\r\n\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { LogoutBackend } from '../../actions/authAction'\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch()\r\n    const cerrarSesion = () => {\r\n        dispatch(LogoutBackend())\r\n    }\r\n    return (\r\n        <nav className=\"navbar navbar-dark bg-dark d-flex justify-content-center flex-column\">\r\n                <button className=\"navbar-brand btn\">Tareas App</button>\r\n            <button className=\"btn btn-outline-danger mx-5\" onClick={cerrarSesion}>Salir</button>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { activarNota } from '../../actions/notasActions'\r\nimport { abrirModal } from '../../actions/uiAction'\r\n\r\nexport const TareaIndividual = ({notaComp}) => {\r\n    const dispatch = useDispatch()\r\n    const { titulo, nota, fecha, nivel } = notaComp\r\n\r\n    const activarNotaBTN = () => {\r\n        dispatch(abrirModal())\r\n        dispatch(activarNota(notaComp))\r\n    }\r\n    return (\r\n        <div className=\"tarea__contenedor\" onClick={activarNotaBTN}>\r\n            <h2 className=\"tarea__titulo\">{titulo}</h2>\r\n            <h3 className=\"tarea__nivel\">Nivel: <span className=\"tarea__nivel-texto\">{nivel}</span></h3>\r\n            <p className=\"tarea__texto\">{nota}</p>\r\n            <h3 className=\"tarea__creada\">Creada: <span className=\"tarea__creada-fecha\">{fecha}</span></h3>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { TareaIndividual } from './TareaIndividual';\r\n\r\nexport const Tareas = () => {\r\n    const {notas} = useSelector(state => state.notas)\r\n    return (\r\n        <div className=\"tareas\">\r\n        {\r\n            notas.map(notaComp => <TareaIndividual key={notaComp.titulo} notaComp={notaComp}/>)\r\n        }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { mostrarNotasBackend } from '../../actions/notasActions'\r\nimport { BotonAgregar } from '../ui/BotonAgregar'\r\nimport { Formulario } from '../ui/Formulario'\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { Tareas } from './Tareas'\r\n\r\nexport const CRM = () => {\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(mostrarNotasBackend())\r\n       \r\n    }, [dispatch])\r\n    return (\r\n        <div>\r\n            <div>\r\n               <Navbar />\r\n               <BotonAgregar />\r\n               <h1 className=\"crm\">Mi Lista de Tareas</h1>\r\n               <Tareas />\r\n               <Formulario />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Carga = () => {\r\n    return (\r\n        <div className=\"contenedor__carga\">\r\n            <div className=\"carga__principal\">\r\n                <div className=\"carga1\"></div>\r\n                <div className=\"carga2\"></div>\r\n                <div className=\"carga3\"></div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nimport { loginBackend } from '../../actions/authAction'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const [valores, cambioInput] = useForm({\r\n        correo: '',\r\n        password: ''\r\n    })\r\n    const envioFormLogin = (e) => {\r\n        e.preventDefault();\r\n        if(validar()){\r\n        dispatch(loginBackend(valores))\r\n        }\r\n    }\r\n    const validar = () => {\r\n        if (!validator.isEmail(correo)) {\r\n            Swal.fire({\r\n                title: 'Ingresa un email válido',\r\n                icon: 'error'\r\n            })\r\n            return false;\r\n        }\r\n        return true\r\n    }\r\n    const { correo, password } = valores;\r\n    return (\r\n        <div className=\"auth__login\">\r\n            <form className=\"auth__contenedor\" onSubmit={envioFormLogin}>\r\n                <h3 className=\"auth__titulo\">Ingresa a tu perfil</h3>\r\n                <div className=\"auth__preg\">\r\n                    <label className=\"auth__label\">email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        className=\"auth__input\"\r\n                        name=\"correo\"\r\n                        value={correo}\r\n                        onChange={cambioInput}\r\n                    />\r\n                </div>\r\n                <div className=\"auth__preg\">\r\n                    <label className=\"auth__label\">password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        className=\"auth__input\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={cambioInput}\r\n                    />\r\n                </div>\r\n                <button className=\"auth__boton\" type=\"submit\">Ingresar</button>\r\n                <p className=\"auth__texto\">¿No tienes cuenta? <Link className=\"auth__texto-esp\" to=\"/auth/registro\">Registrate</Link></p>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport Swal from 'sweetalert2';\r\nimport validator from 'validator'\r\nimport { registerBackend } from '../../actions/authAction';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const RegisterScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const [valores, cambioInput] = useForm({\r\n        nombre: '',\r\n        correo: '',\r\n        password: '',\r\n        password2: ''\r\n    })\r\n    const envioForm = (e) => {\r\n        e.preventDefault();\r\n        if (validar()) {\r\n            dispatch(registerBackend({ nombre, correo, password }))\r\n        }\r\n    }\r\n\r\n\r\n    const validar = () => {\r\n        if (nombre.trim().length === 0) {\r\n            Swal.fire({\r\n                title: 'Coloque su nombre',\r\n                icon: 'error'\r\n            })\r\n            return false;\r\n        }\r\n\r\n        if (!validator.isEmail(correo)) {\r\n            Swal.fire({\r\n                title: 'Ingresa un email correcto',\r\n                icon: 'error'\r\n            })\r\n            return false;\r\n        }\r\n\r\n        if (password.length <= 6) {\r\n            Swal.fire({\r\n                title: 'La contraseñas debe contener numeros y letras, con 6 caracteres',\r\n                icon: 'error'\r\n            })\r\n            return false;\r\n        }\r\n        if (password !== password2) {\r\n            Swal.fire({\r\n                title: 'Las contraseñas no coinciden',\r\n                icon: 'error'\r\n            })\r\n            return false;\r\n        }\r\n\r\n        return true\r\n    }\r\n\r\n    const { nombre, correo, password, password2 } = valores;\r\n    return (\r\n        <div className=\"auth__login\">\r\n            <form className=\"auth__contenedor\" onSubmit={envioForm}>\r\n                <h3 className=\"auth__titulo\">Crea una cuenta</h3>\r\n                <div className=\"auth__preg\">\r\n                    <label className=\"auth__label\">nombre</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Nombre\"\r\n                        className=\"auth__input\"\r\n                        name=\"nombre\"\r\n                        value={nombre}\r\n                        onChange={cambioInput}\r\n                    />\r\n                </div>\r\n                <div className=\"auth__preg\">\r\n                    <label className=\"auth__label\">email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        placeholder=\"Email\"\r\n                        className=\"auth__input\"\r\n                        name=\"correo\"\r\n                        value={correo}\r\n                        onChange={cambioInput}\r\n                    />\r\n                </div>\r\n                <div className=\"auth__preg\">\r\n                    <label className=\"auth__label\">password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        className=\"auth__input\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={cambioInput}\r\n                    />\r\n                </div>\r\n                <div className=\"auth__preg\">\r\n                    <label className=\"auth__label\">password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Repite el Password\"\r\n                        className=\"auth__input\"\r\n                        name=\"password2\"\r\n                        value={password2}\r\n                        onChange={cambioInput}\r\n                    />\r\n                </div>\r\n                <button className=\"auth__boton\" type=\"submit\">Crear</button>\r\n                <p className=\"auth__texto\">Ya tienes cuenta? <Link className=\"auth__texto-esp\" to=\"/auth/login\">Volver</Link></p>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__fondo\">\r\n            <Switch>\r\n                <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n                <Route exact path=\"/auth/registro\" component={RegisterScreen} />\r\n                <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const RutaPrivada = ({\r\n    auth,\r\n    component: Component,\r\n    ...resto\r\n}) => {\r\n    return (\r\n        <Route {...resto} component={variables => auth ? <Component {...variables} /> : <Redirect to=\"/auth/login\" />} />\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const RutaPublica = ({\r\n    auth,\r\n    component: Component,\r\n    ...resto\r\n}) => {\r\n    return (\r\n       <Route {...resto} component={variables => !auth ? <Component {...variables}/> : <Redirect to=\"/\"/>}/>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\r\nimport { Check } from '../actions/authAction'\r\nimport { CRM } from '../components/crm/CRM'\r\nimport { Carga } from '../components/ui/Carga'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { RutaPrivada } from './RutaPrivada'\r\nimport { RutaPublica } from './RutaPublica'\r\n\r\nexport const AppRouter = () => {\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(Check())\r\n    }, [dispatch])\r\n\r\n    if(checking){\r\n        return <Carga />\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <RutaPrivada exact path=\"/\" component={CRM} auth={!!uid}/>\r\n                    <RutaPublica path=\"/auth\" component={AuthRouter} auth={!!uid}/>\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nconst valoresIniciales = {\r\n    notas: [],\r\n    notaActiva: null\r\n}\r\nexport const notasReducer = (state = valoresIniciales, action) => {\r\n    switch (action.type) {\r\n        case types.notaActiva:\r\n            return {\r\n                ...state,\r\n                notaActiva: {...action.payload},\r\n            }\r\n        case types.notaAgregar:\r\n            return {\r\n                ...state,\r\n                notas: [...state.notas, action.payload],\r\n                notaActiva: null\r\n            }\r\n        case types.notalimpiar:\r\n            return {\r\n                ...state,\r\n                notaActiva: null\r\n            }\r\n        case types.notaEliminar:\r\n            return {\r\n                ...state,\r\n                notas: state.notas.filter(nota => nota._id !== action.payload),\r\n                notaActiva: null\r\n            }\r\n        case types.notaEditar:\r\n            return {\r\n                ...state,           \r\n                notas: state.notas.map(nota => nota._id === action.payload._id ? action.payload : nota),\r\n                notaActiva: null\r\n            }\r\n        case types.notaMostrar:\r\n            return {\r\n                ...state,\r\n                notas: [...action.payload]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notasReducer } from '../reducers/notasReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\n\tconst reducers = combineReducers({\r\n\t\tui: uiReducer,\r\n\t\tnotas: notasReducer,\r\n\t\tauth: authReducer\r\n\t});\r\n\r\n\tconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n\texport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)) );\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiReducer = (state = { isOpen: false }, action) => {\r\n    switch (action.type) {\r\n        case types.uiAbrirModal:\r\n            return {\r\n                ...state,\r\n                isOpen: true\r\n            }\r\n        case types.uiCerrarModal:\r\n            return {\r\n                ...state,\r\n                isOpen: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { types } from \"../types/types\"\r\n\r\nexport const authReducer = (state = {checking: true}, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authChecking:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const App = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport './styles/style.scss'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}